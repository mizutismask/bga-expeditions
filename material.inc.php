<?php

/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * Expeditions implementation : © <Your name here> <Your email address here>
 * 
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * material.inc.php
 *
 * Expeditions game material description
 *
 * Here, you can describe the material of your game with PHP variables.
 *   
 * This file is loaded in your game logic class constructor, ie these variables
 * are available everywhere in your game logic code.
 *
 */

require_once(__DIR__ . '/modules/php/objects/route.php');
require_once(__DIR__ . '/modules/php/objects/destination.php');

/**
 * Cities in the map (by alphabetical order).
 */
$this->CITIES = [
  100 => 'Starting point',
  101 => 'Denali',
  102 => 'Mackenzie Delta',
  103 => 'Northwest Passage',
  104 => 'Banff',
  105 => 'Crater Lake',
  106 => 'Old Faithful',
  107 => 'Puerto Rico',
  108 => 'Grand Canyon',
  109 => 'Niagara Falls',
  110 => 'Louisiana',
  111 => 'Teotihuacan',
  112 => 'Tikal',
  113 => 'Newfoundland',
  114 => 'Greenland',
  115 => 'Angel Falls',
  116 => 'Marajó',
  117 => 'Amazon Rainforest',
  118 => 'Machu Picchu',
  119 => 'Aripuanã',
  120 => 'Salvador de Bahia',
  121 => 'Altiplano',
  122 => 'Iguazú Falls',
  123 => 'Atacama',
  124 => 'Galápagos Islands',
  125 => 'Pacific Ocean',
  126 => 'Rapa Nui',
  127 => 'Tierra del Fuego',
  128 => 'Graham Land',
  129 => 'Svalbard',
  130 => 'Thingvellir',
  131 => 'Stonehenge',
  132 => 'Rome',
  133 => 'Athens',
  134 => 'Timgad',
  135 => 'Canary Islands',
  136 => 'Sahara',
  137 => 'Gizeh',
  138 => 'Timbuktu',
  139 => 'Kush',
  140 => 'Aksum',
  141 => 'Elmina',
  142 => 'Douala',
  143 => 'Virunga',
  144 => 'Victoria Falls',
  145 => 'Omatako',
  146 => 'Atlantic Ocean',
  147 => 'Madagascar',
  148 => 'Indian Ocean',
  149 => 'Petra',
  150 => 'Babylon',
  151 => 'Persepolis',
  152 => 'Sanaa',
  153 => 'Caspian Sea',
  154 => 'Zagorsk',
  155 => 'Putorana Plateau',
  156 => 'Novosibirsk',
  157 => 'Harappa',
  158 => 'Sakha',
  159 => 'Lake Baikal',
  160 => 'Great Wall',
  161 => 'Mount Everest',
  162 => 'Taj Mahal',
  163 => 'Sigiriya',
  164 => 'Bagan',
  165 => 'Angkor Wat',
  166 => 'Xi’an',
  167 => 'Amur River',
  168 => 'Kolyma',
  169 => 'Bering Strait',
  170 => 'Mont Fuji',
  171 => 'Borobudur',
  172 => 'Sulawesi',
  173 => 'Papua',
  174 => 'Arnhem Land',
  175 => 'Bungle Bungle Range',
  176 => 'Great Barrier Reef',
  177 => 'Uluru',
  178 => 'Perth',
  179 => 'Tasmania',
  180 => 'Fiordland National Park',
];

/**
 * Route on the map. 
 * For double routes, there is 2 instances of Route.
 * For cities (from/to), it's always low id to high id.
 */
$this->ROUTES = [
  1 => new Route(1, 4, 2, GRAY),
  2 => new Route(1, 16, 5, BLUE),
  3 => new Route(1, 18, 1, GRAY),
  4 => new Route(1, 19, 4, YELLOW),
  5 => new Route(1, 19, 4, ORANGE),
  6 => new Route(1, 26, 2, GRAY),
  7 => new Route(1, 26, 2, GRAY),
  8 => new Route(2, 17, 2, GRAY),
  9 => new Route(2, 17, 2, GRAY),
  10 => new Route(2, 20, 2, YELLOW),
  11 => new Route(2, 20, 2, RED),

  100 => new Route(3, 10, 4, GRAY),

  12 => new Route(3, 32, 4, GRAY),
  13 => new Route(3, 34, 3, GRAY),
  14 => new Route(3, 36, 6, WHITE),
  15 => new Route(4, 16, 4, PINK),
  16 => new Route(4, 26, 2, GRAY),
  17 => new Route(5, 8, 3, RED),
  18 => new Route(5, 22, 4, BLUE),
  19 => new Route(5, 24, 3, ORANGE),
  20 => new Route(5, 24, 3, BLACK),
  21 => new Route(5, 27, 2, GREEN),
  22 => new Route(5, 27, 2, WHITE),
  23 => new Route(5, 33, 4, WHITE),
  24 => new Route(6, 9, 4, RED),
  25 => new Route(6, 11, 1, GRAY),
  26 => new Route(6, 11, 1, GRAY),
  27 => new Route(6, 14, 2, GRAY),
  28 => new Route(6, 21, 2, GRAY),
  29 => new Route(6, 21, 2, GRAY),
  30 => new Route(7, 10, 4, GREEN),
  31 => new Route(7, 12, 4, BLACK),
  32 => new Route(7, 12, 4, ORANGE),
  33 => new Route(7, 21, 4, RED),
  34 => new Route(7, 22, 4, PINK),
  35 => new Route(7, 23, 5, WHITE),
  36 => new Route(7, 28, 3, RED),
  37 => new Route(7, 28, 3, YELLOW),

  99 => new Route(7, 31, 2, GRAY),

  38 => new Route(8, 10, 6, ORANGE),
  39 => new Route(8, 22, 2, GRAY),
  40 => new Route(8, 22, 2, GRAY),
  41 => new Route(8, 29, 3, GRAY),
  42 => new Route(8, 33, 6, PINK),
  43 => new Route(8, 36, 4, BLACK),
  44 => new Route(9, 11, 6, GREEN),
  45 => new Route(9, 15, 6, BLACK),
  46 => new Route(9, 21, 5, YELLOW),
  47 => new Route(9, 23, 3, GRAY),
  48 => new Route(9, 31, 2, GRAY),
  49 => new Route(10, 22, 5, RED),
  50 => new Route(10, 28, 3, PINK),
  51 => new Route(10, 32, 6, YELLOW),
  52 => new Route(10, 36, 4, BLUE),
  53 => new Route(11, 19, 2, GRAY),
  54 => new Route(12, 21, 2, GRAY),
  55 => new Route(12, 21, 2, GRAY),
  56 => new Route(12, 22, 1, GRAY),
  57 => new Route(12, 22, 1, GRAY),
  58 => new Route(12, 27, 2, BLUE),
  59 => new Route(12, 27, 2, PINK),
  60 => new Route(13, 15, 2, GRAY),
  61 => new Route(13, 28, 3, ORANGE),
  62 => new Route(14, 18, 3, WHITE),
  63 => new Route(14, 19, 3, GREEN),
  64 => new Route(14, 21, 2, GRAY),
  65 => new Route(14, 27, 2, GRAY),
  66 => new Route(15, 23, 3, GRAY),
  67 => new Route(15, 30, 3, YELLOW),
  68 => new Route(15, 30, 3, PINK),
  69 => new Route(16, 19, 6, RED),
  70 => new Route(17, 20, 3, BLUE),
  71 => new Route(17, 29, 5, BLACK),
  72 => new Route(17, 33, 3, GRAY),
  73 => new Route(18, 24, 4, YELLOW),
  74 => new Route(18, 26, 3, BLACK),
  75 => new Route(18, 27, 2, GRAY),
  76 => new Route(20, 24, 2, WHITE),
  77 => new Route(20, 24, 2, GREEN),
  78 => new Route(20, 35, 2, ORANGE),
  79 => new Route(20, 35, 2, BLACK),
  80 => new Route(21, 31, 3, BLUE),
  81 => new Route(23, 31, 3, GRAY),
  82 => new Route(24, 26, 2, GRAY),
  83 => new Route(24, 27, 5, GREEN),
  84 => new Route(24, 33, 2, GRAY),
  85 => new Route(24, 35, 2, GRAY),
  86 => new Route(25, 28, 6, BLUE),
  87 => new Route(25, 30, 5, GREEN),
  88 => new Route(25, 30, 5, PINK),
  89 => new Route(25, 32, 1, GRAY),
  90 => new Route(25, 32, 1, GRAY),
  91 => new Route(26, 35, 2, GRAY),
  92 => new Route(26, 35, 2, GRAY),
  93 => new Route(28, 30, 5, ORANGE),
  94 => new Route(28, 30, 5, WHITE),
  95 => new Route(29, 33, 2, GRAY),
  96 => new Route(29, 36, 6, GRAY),
  97 => new Route(32, 34, 1, GRAY),
  98 => new Route(32, 34, 1, GRAY),
];

/**
 * List of DestinationCard.
 */
$this->DESTINATIONS = [
  1 => [
    0 => new DestinationCard(100, 100),
    1 => new DestinationCard(101, 101),
    2 => new DestinationCard(102, 102),
    3 => new DestinationCard(103, 103),
    4 => new DestinationCard(104, 104),
    5 => new DestinationCard(105, 105),
    6 => new DestinationCard(106, 106),
    7 => new DestinationCard(107, 107),
    8 => new DestinationCard(108, 108),
    9 => new DestinationCard(109, 109),
    10 => new DestinationCard(110, 110),
    11 => new DestinationCard(111, 111),
    12 => new DestinationCard(112, 112),
    13 => new DestinationCard(113, 113),
    14 => new DestinationCard(114, 114),
    15 => new DestinationCard(115, 115),
    16 => new DestinationCard(116, 116),
    17 => new DestinationCard(117, 117),
    18 => new DestinationCard(118, 118),
    19 => new DestinationCard(119, 119),
    20 => new DestinationCard(120, 120),
    21 => new DestinationCard(121, 121),
    22 => new DestinationCard(122, 122),
    23 => new DestinationCard(123, 123),
    24 => new DestinationCard(124, 124),
    25 => new DestinationCard(125, 125),
    26 => new DestinationCard(126, 126),
    27 => new DestinationCard(127, 127),
    28 => new DestinationCard(128, 128),
    29 => new DestinationCard(129, 129),
    30 => new DestinationCard(130, 130),
    31 => new DestinationCard(131, 131),
    32 => new DestinationCard(132, 132),
    33 => new DestinationCard(133, 133),
    34 => new DestinationCard(134, 134),
    35 => new DestinationCard(135, 135),
    36 => new DestinationCard(136, 136),
    37 => new DestinationCard(137, 137),
    38 => new DestinationCard(138, 138),
    39 => new DestinationCard(139, 139),
    40 => new DestinationCard(140, 140),
    41 => new DestinationCard(141, 141),
    42 => new DestinationCard(142, 142),
    43 => new DestinationCard(143, 143),
    44 => new DestinationCard(144, 144),
    45 => new DestinationCard(145, 145),
    46 => new DestinationCard(146, 146),
    47 => new DestinationCard(147, 147),
    48 => new DestinationCard(148, 148),
    49 => new DestinationCard(149, 149),
    50 => new DestinationCard(150, 150),
    51 => new DestinationCard(151, 151),
    52 => new DestinationCard(152, 152),
    53 => new DestinationCard(153, 153),
    54 => new DestinationCard(154, 154),
    55 => new DestinationCard(155, 155),
    56 => new DestinationCard(156, 156),
    57 => new DestinationCard(157, 157),
    58 => new DestinationCard(158, 158),
    59 => new DestinationCard(159, 159),
    60 => new DestinationCard(160, 160),
    61 => new DestinationCard(161, 161),
    62 => new DestinationCard(162, 162),
    63 => new DestinationCard(163, 163),
    64 => new DestinationCard(164, 164),
    65 => new DestinationCard(165, 165),
    66 => new DestinationCard(166, 166),
    67 => new DestinationCard(167, 167),
    68 => new DestinationCard(168, 168),
    69 => new DestinationCard(169, 169),
    70 => new DestinationCard(170, 170),
    71 => new DestinationCard(171, 171),
    72 => new DestinationCard(172, 172),
    73 => new DestinationCard(173, 173),
    74 => new DestinationCard(174, 174),
    75 => new DestinationCard(175, 175),
    76 => new DestinationCard(176, 176),
    77 => new DestinationCard(177, 177),
    78 => new DestinationCard(178, 178),
    79 => new DestinationCard(179, 179),
    80 => new DestinationCard(180, 180),
    ]
];

/**
 * Points scored for claimed routes.
 */
$this->ROUTE_POINTS = [
  1 => 1,
  2 => 2,
  3 => 4,
  4 => 7,
  5 => 10,
  6 => 15,
];
